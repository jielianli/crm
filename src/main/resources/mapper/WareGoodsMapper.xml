<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sc.spring.mapper.WareGoodsMapper">
  <resultMap id="BaseResultMap" type="com.sc.spring.entity.WareGoods">
    <id column="GOODS_ID" jdbcType="DECIMAL" property="goodsId" />
    <result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName" />
    <result column="GOODS_CATE" jdbcType="VARCHAR" property="goodsCate" />
    <result column="SPECIFICATIONS" jdbcType="VARCHAR" property="specifications" />
    <result column="UNIT" jdbcType="VARCHAR" property="unit" />
    <result column="WAREHOUSE_ID" jdbcType="DECIMAL" property="warehouseId" />
    <result column="INVENTORY" jdbcType="DECIMAL" property="inventory" />
    <result column="COSP_PRICE" jdbcType="DECIMAL" property="cospPrice" />
    <result column="RETAIL_PRICE" jdbcType="DECIMAL" property="retailPrice" />
    <result column="DISTR_PRICE" jdbcType="DECIMAL" property="distrPrice" />
    <result column="REMARKS" jdbcType="VARCHAR" property="remarks" />
    <result column="COMPANY_ID" jdbcType="DECIMAL" property="companyId" />
    <result column="LASTTIME" jdbcType="TIMESTAMP" property="lasttime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    GOODS_ID, GOODS_NAME, GOODS_CATE, SPECIFICATIONS, UNIT, WAREHOUSE_ID, INVENTORY, 
    COSP_PRICE, RETAIL_PRICE, DISTR_PRICE, REMARKS, COMPANY_ID, LASTTIME
  </sql>
  <select id="selectByExample" parameterType="com.sc.spring.entity.WareGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from WARE_GOODS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from WARE_GOODS
    where GOODS_ID = #{goodsId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from WARE_GOODS
    where GOODS_ID = #{goodsId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.sc.spring.entity.WareGoodsExample">
    delete from WARE_GOODS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="GOODS_ID" keyProperty="goodsId" parameterType="com.sc.spring.entity.WareGoods" useGeneratedKeys="true">
    insert into WARE_GOODS (GOODS_NAME, GOODS_CATE, SPECIFICATIONS, 
      UNIT, WAREHOUSE_ID, INVENTORY, 
      COSP_PRICE, RETAIL_PRICE, DISTR_PRICE, 
      REMARKS, COMPANY_ID, LASTTIME
      )
    values (#{goodsName,jdbcType=VARCHAR}, #{goodsCate,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{warehouseId,jdbcType=DECIMAL}, #{inventory,jdbcType=DECIMAL}, 
      #{cospPrice,jdbcType=DECIMAL}, #{retailPrice,jdbcType=DECIMAL}, #{distrPrice,jdbcType=DECIMAL}, 
      #{remarks,jdbcType=VARCHAR}, #{companyId,jdbcType=DECIMAL}, #{lasttime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="GOODS_ID" keyProperty="goodsId" parameterType="com.sc.spring.entity.WareGoods" useGeneratedKeys="true">
    insert into WARE_GOODS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        GOODS_NAME,
      </if>
      <if test="goodsCate != null">
        GOODS_CATE,
      </if>
      <if test="specifications != null">
        SPECIFICATIONS,
      </if>
      <if test="unit != null">
        UNIT,
      </if>
      <if test="warehouseId != null">
        WAREHOUSE_ID,
      </if>
      <if test="inventory != null">
        INVENTORY,
      </if>
      <if test="cospPrice != null">
        COSP_PRICE,
      </if>
      <if test="retailPrice != null">
        RETAIL_PRICE,
      </if>
      <if test="distrPrice != null">
        DISTR_PRICE,
      </if>
      <if test="remarks != null">
        REMARKS,
      </if>
      <if test="companyId != null">
        COMPANY_ID,
      </if>
      <if test="lasttime != null">
        LASTTIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsCate != null">
        #{goodsCate,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null">
        #{warehouseId,jdbcType=DECIMAL},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=DECIMAL},
      </if>
      <if test="cospPrice != null">
        #{cospPrice,jdbcType=DECIMAL},
      </if>
      <if test="retailPrice != null">
        #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="distrPrice != null">
        #{distrPrice,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=DECIMAL},
      </if>
      <if test="lasttime != null">
        #{lasttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sc.spring.entity.WareGoodsExample" resultType="java.lang.Long">
    select count(*) from WARE_GOODS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update WARE_GOODS
    <set>
      <if test="record.goodsId != null">
        GOODS_ID = #{record.goodsId,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsName != null">
        GOODS_NAME = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsCate != null">
        GOODS_CATE = #{record.goodsCate,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null">
        SPECIFICATIONS = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        UNIT = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.warehouseId != null">
        WAREHOUSE_ID = #{record.warehouseId,jdbcType=DECIMAL},
      </if>
      <if test="record.inventory != null">
        INVENTORY = #{record.inventory,jdbcType=DECIMAL},
      </if>
      <if test="record.cospPrice != null">
        COSP_PRICE = #{record.cospPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.retailPrice != null">
        RETAIL_PRICE = #{record.retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.distrPrice != null">
        DISTR_PRICE = #{record.distrPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.remarks != null">
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        COMPANY_ID = #{record.companyId,jdbcType=DECIMAL},
      </if>
      <if test="record.lasttime != null">
        LASTTIME = #{record.lasttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update WARE_GOODS
    set GOODS_ID = #{record.goodsId,jdbcType=DECIMAL},
      GOODS_NAME = #{record.goodsName,jdbcType=VARCHAR},
      GOODS_CATE = #{record.goodsCate,jdbcType=VARCHAR},
      SPECIFICATIONS = #{record.specifications,jdbcType=VARCHAR},
      UNIT = #{record.unit,jdbcType=VARCHAR},
      WAREHOUSE_ID = #{record.warehouseId,jdbcType=DECIMAL},
      INVENTORY = #{record.inventory,jdbcType=DECIMAL},
      COSP_PRICE = #{record.cospPrice,jdbcType=DECIMAL},
      RETAIL_PRICE = #{record.retailPrice,jdbcType=DECIMAL},
      DISTR_PRICE = #{record.distrPrice,jdbcType=DECIMAL},
      REMARKS = #{record.remarks,jdbcType=VARCHAR},
      COMPANY_ID = #{record.companyId,jdbcType=DECIMAL},
      LASTTIME = #{record.lasttime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sc.spring.entity.WareGoods">
    update WARE_GOODS
    <set>
      <if test="goodsName != null">
        GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsCate != null">
        GOODS_CATE = #{goodsCate,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        SPECIFICATIONS = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        UNIT = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null">
        WAREHOUSE_ID = #{warehouseId,jdbcType=DECIMAL},
      </if>
      <if test="inventory != null">
        INVENTORY = #{inventory,jdbcType=DECIMAL},
      </if>
      <if test="cospPrice != null">
        COSP_PRICE = #{cospPrice,jdbcType=DECIMAL},
      </if>
      <if test="retailPrice != null">
        RETAIL_PRICE = #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="distrPrice != null">
        DISTR_PRICE = #{distrPrice,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        COMPANY_ID = #{companyId,jdbcType=DECIMAL},
      </if>
      <if test="lasttime != null">
        LASTTIME = #{lasttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where GOODS_ID = #{goodsId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sc.spring.entity.WareGoods">
    update WARE_GOODS
    set GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
      GOODS_CATE = #{goodsCate,jdbcType=VARCHAR},
      SPECIFICATIONS = #{specifications,jdbcType=VARCHAR},
      UNIT = #{unit,jdbcType=VARCHAR},
      WAREHOUSE_ID = #{warehouseId,jdbcType=DECIMAL},
      INVENTORY = #{inventory,jdbcType=DECIMAL},
      COSP_PRICE = #{cospPrice,jdbcType=DECIMAL},
      RETAIL_PRICE = #{retailPrice,jdbcType=DECIMAL},
      DISTR_PRICE = #{distrPrice,jdbcType=DECIMAL},
      REMARKS = #{remarks,jdbcType=VARCHAR},
      COMPANY_ID = #{companyId,jdbcType=DECIMAL},
      LASTTIME = #{lasttime,jdbcType=TIMESTAMP}
    where GOODS_ID = #{goodsId,jdbcType=DECIMAL}
  </update>
</mapper>